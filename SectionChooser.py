from typing import Any, NoReturn
from telebot import TeleBot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from tbot import Info

class SectionChooser():

    bot: TeleBot
    call: Any
    info: Info
    parent: str
    number: int
    next_menu: InlineKeyboardMarkup
    back_page: int
    chat_id: int
    message_id: int
    text: str
    urls: tuple
    text_urls: tuple

    def __init__(
                self, 
                bot: TeleBot, 
                call: Any, 
                info: Info
                ):
        
        """
        –ö–ª–∞—Å—Å —á—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ä–∞–∑–¥–µ–ª, –µ–≥–æ —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏-—Å—Å—ã–ª–∫–∏
        """
    
        self.bot: TeleBot = bot
        self.call: Any = call

        self.info: Info = info

        self.parent: str = info.parent
        self.number: int = info.number
        self.next_menu: InlineKeyboardMarkup = InlineKeyboardMarkup(row_width=1)
        self.back_page: int = info.page
        self.chat_id: int = call.message.chat.id
        self.message_id: int = call.message.message_id
        
        self.text: str = info.text
        
        self.urls: tuple = info.urls
        self.text_urls: tuple = info.url_text
        
        
    def get_menu_buttons(self) -> tuple:
        
        """
        –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –µ—Å–ª–∏ –æ–Ω–∏ –∏–º–µ—é—Ç—Å—è, –≤—Å–µ –∫–Ω–æ–ø–∫–∏ - –∫–Ω–æ–ø–∫–∏-—Å—Å—ã–ª–∫–∏
        """

        menu_buttons: list = []

        if self.text_urls != None and self.urls != None:
            for text, url in zip(self.text_urls, self.urls):
                menu_buttons.append(InlineKeyboardButton(text, url=url))
        return tuple(menu_buttons)

    def add_buttons(
                    self,navigation_buttons: tuple,
                    menu_buttons: list, 
                    next_menu: InlineKeyboardMarkup
                    ) -> InlineKeyboardMarkup:
        
        """
        –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ –∫–Ω–æ–ø–∫–∏, —Ö—Ä–∞–Ω—è—â–∏–µ—Å—è –≤ –∫–æ—Ä—Ç–µ–∂–∞—Ö, –≤ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        """
        next_menu.add(*menu_buttons, *navigation_buttons)
        return next_menu

    def get_navigation_buttons(self) -> tuple:
        call_back_data: str = f"{self.parent}``{self.back_page}"
        
        navigation_buttons: tuple = (
                                    InlineKeyboardButton('üîô –ù–∞–∑–∞–¥ üîô', callback_data=call_back_data),
                                    InlineKeyboardButton(text='üì± –í –º–µ–Ω—é üì±', callback_data='aaa``1')
                                     )
        return navigation_buttons

    def create_buttons(self) -> InlineKeyboardMarkup:
        
        """
        –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        """

        menu_buttons: tuple = self.get_menu_buttons()
        
        navigation_buttons: tuple = self.get_navigation_buttons()
        
        next_menu: InlineKeyboardMarkup = self.add_buttons(
                                                        navigation_buttons, 
                                                        menu_buttons, 
                                                        self.next_menu
                                                        ) 
        
        return next_menu
        
    def section_selector(self) -> NoReturn:
        
        """
        –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–µ–º —Å–∞–º—ã–º "–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç" —Ä–∞–∑–¥–µ–ª, –º–µ–Ω—è–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏
        –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–æ—à–ª–æ–µ –º–µ–Ω—é –∏ –≥–ª–∞–≤ –º–µ–Ω—é
        """

        self.bot.edit_message_text(
                                    self.text,
                                    self.chat_id,
                                    self.message_id,
                                    reply_markup=self.create_buttons()
                                    )